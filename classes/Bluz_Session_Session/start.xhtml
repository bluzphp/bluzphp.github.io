<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Bluz\Session\Session::start</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#Bluz_Session">Bluz\Session</a>
          </li>
          <li class="separator">
            <a title="Bluz\Session\Session" href="../../classes/Bluz_Session_Session.xhtml">Session</a>
          </li>
          <li class="separator">start</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="#throws">Throws</a>
          </li>
          <li>
            <a href="#tests">Tests</a>
          </li>
          <li>
            <a href="../../source/Session/Session.php.xhtml#line199">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>Bluz\Session\Session::</small>start</h1>
        <h4>Start session</h4>
        <p>if No session currently exists, attempt to start it. Calls
{@link isValid()} once session_start() is called, and raises an
exception if validation fails.</p>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function start()
            </code>
        </div>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>void</dt>
          <dd><br/>
        </dd>
        </dl>
        <h2 id="throws">Errors/Exceptions</h2>
        <dl class="styled">
          <dt>
            <code>
              <a title="Bluz\Session\SessionException" href="../../classes/Bluz_Session_SessionException.xhtml">SessionException</a>
            </code>
          </dt>
          <dd/>
        </dl>
        <h2 id="tests">Test Coverage</h2>
        <div class="styled">
          <h3>Information</h3>
          <ul class="styled">
            <li>Coverage: 2/5 Lines (40%)</li>
            <li>Tests: 639</li>
            <li>Passed: 639 (100%)</li>
          </ul>
          <h3>Tests</h3>
          <ul class="styled">
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Acl\AclTest::testAllow</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Acl\AclTest::testDeny</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testGetConfigData</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testRegistry</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testIndexController</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testErrorController</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperForbidden</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperRedirectAjaxCall</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Auth\AuthTest::testGetAuthRow</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\ContainerTest::testResetContainer</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\ContainerTest::testRegularAccess</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\ContainerTest::testMagicAccess</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\ContainerTest::testArrayAccess</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\ContainerTest::testJsonSerialize</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\HelperTest::testAddHelperPath</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\HelperTest::testSetHelperPaths</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\NilTest::testComplexNill</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\OptionsTest::testSetOptions</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\OptionsTest::testGetOptions</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\OptionsTest::testGetFalseOption</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\SingletonTest::testGetInstance</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\SingletonTest::testPrivateMethods</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\SingletonTest::testConstructThrowError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\SingletonTest::testCloneThrowError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\ControllerTest::testHelperUser</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testSelect</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testInsert</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testUpdate</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\QueryTest::testDelete</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\RowTest::testGetRelationException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\RowTest::testOffsetSet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\RowTest::testOffsetExists</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\RowTest::testOffsetUnset</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\RowTest::testOffsetGet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\TableTest::testGetPrimaryKey</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\TableTest::testFindException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\TableTest::testFindException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testTriggerWithTarget</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testTriggerWithParams</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testEventSetParamsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventTest::testEventMethods</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventTest::testEventMethodsWithObject</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventTest::testEventSetParamsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testProcessRequest</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testRequestWithAliases</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperFilter</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperFirst</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperLast</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperLimit</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperNext</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperOrder</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperPage</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperPages</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperPrev</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperReset</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testHelperTotal</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testSetContent</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testHelperLink</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testHelperMeta</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testHelperMetaIsInvalid</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testHelperMetaIsEmpty</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Layout\LayoutTest::testHelperTitle</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Messages\MessagesTest::testMessages</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Messages\MessagesTest::testMessagesPop</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\CacheTest::testDisabledTest</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\RequestTest::testQueryParams</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\RequestTest::testParsedBodyParams</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\RequestTest::testCookieParams</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\RequestTest::testGetParams</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\RequestTest::testGetParamPriority</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\RequestTest::testGetParamDefaultValue</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\ResponseTest::testHelperRedirect</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\ResponseTest::testHelperRedirectTo</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Proxy\ResponseTest::testHelperReload</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Registry\RegistryTest::testSetFromArray</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Registry\RegistryTest::testSetGet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Registry\RegistryTest::testContains</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Registry\RegistryTest::testRemove</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Response\ResponseTest::testGetters</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Router\RouterTest::testRouterFullUrl</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Translator\TranslatorTest::testTranslate</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testValidRules</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testValidatorException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testMagicMethods</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testData</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testJson</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperAhref</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperAttributes</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperBaseUrl</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperCheckbox</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperController</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperDispatch</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperHeadScript</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperHeadStyle</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperModule</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperPartial</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperPartialLoop</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperRadio</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperRedactor</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperScript</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperScriptBlock</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperSelect</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperStyle</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperStyleBlock</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperUrl</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperUrlException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperUser</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.9.0 - Copyright (C) 2010 - 2017 by Arne Blankerts</span>
    </footer>
  </body>
</html>
