<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#Bluz_Validator_Rule">Bluz\Validator\Rule</a>
          </li>
          <li class="separator">
            <a title="Bluz\Validator\Rule\AbstractRule" href="../../classes/Bluz_Validator_Rule_AbstractRule.xhtml">AbstractRule</a>
          </li>
          <li class="separator">__toString</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#return">Return</a>
          </li>
          <li>
            <a href="#tests">Tests</a>
          </li>
          <li>
            <a href="../../source/Validator/Rule/AbstractRule.php.xhtml#line79">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>Bluz\Validator\Rule\AbstractRule::</small>__toString</h1>
        <h4>Cast to string</h4>
        <p/>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function __toString()
            </code>
        </div>
        <h2 id="return">Returns</h2>
        <dl class="styled">
          <dt>string</dt>
          <dd/>
        </dl>
        <h2 id="tests">Test Coverage</h2>
        <div class="styled">
          <h3>Information</h3>
          <ul class="styled">
            <li>Coverage: 1/1 Lines (100%)</li>
            <li>Tests: 73</li>
            <li>Passed: 73 (100%)</li>
          </ul>
          <h3>Tests</h3>
          <ul class="styled">
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.0 - Copyright (C) 2010 - 2015 by Arne Blankerts</span>
    </footer>
  </body>
</html>
