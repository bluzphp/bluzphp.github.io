<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html SYSTEM "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en">
  <head>
    <title>phpDox - Test Method</title>
    <link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
  </head>
  <body>
    <nav class="topnav">
      <ul>
        <li>
          <div class="logo"><span>/**</span>phpDox</div>
        </li>
        <li class="separator">
          <a href="../../index.xhtml">Overview</a>
        </li>
        <li class="separator">
          <a href="../../namespaces.xhtml">Namespaces</a>
        </li>
        <li>
          <a href="../../interfaces.xhtml">Interfaces</a>
        </li>
        <li>
          <a href="../../classes.xhtml">Classes</a>
        </li>
        <li>
          <a href="../../traits.xhtml">Traits</a>
        </li>
        <li class="separator">
          <a href="../../source/index.xhtml">Source</a>
        </li>
      </ul>
    </nav>
    <div id="mainstage">
      <div class="box">
        <ul class="breadcrumb">
          <li>
            <a href="../../index.xhtml">Overview</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml">Classes</a>
          </li>
          <li class="separator">
            <a href="../../classes.xhtml#Bluz_Common_Exception">Bluz\Common\Exception</a>
          </li>
          <li class="separator">
            <a title="Bluz\Common\Exception\CommonException" href="../../classes/Bluz_Common_Exception_CommonException.xhtml">CommonException</a>
          </li>
          <li class="separator">__construct</li>
        </ul>
      </div>
      <nav class="box">
        <ul>
          <li>
            <a href="#introduction">Introduction</a>
          </li>
          <li>
            <a href="#synopsis">Synopsis</a>
          </li>
          <li>
            <a href="#parameter">Parameter</a>
          </li>
          <li>
            <a href="#tests">Tests</a>
          </li>
          <li>
            <a href="../../source/Common/Exception/CommonException.php.xhtml#line37">Source</a>
          </li>
        </ul>
      </nav>
      <section>
        <h1><small>Bluz\Common\Exception\CommonException::</small>__construct</h1>
        <h4>(PHP 5 &amp;gt;= 5.1.0)&lt;br/&gt; Construct the exception. Note: The message is NOT binary safe.</h4>
        <p/>
        <ul/>
        <h2 id="signature">Signature</h2>
        <div class="styled synopsis">
          <code>public function __construct([string
        $message = "",
            [integer
        $code = 0,
            [<a title="\Exception" href="../../classes/_Exception.xhtml">Exception</a>
        $previous = null]]] )
            </code>
        </div>
        <h2 id="parameterlist">Parameters</h2>
        <dl class="styled">
          <dt><code>$message</code>
                —
                string</dt>
          <dd>[optional] The Exception message to throw.</dd>
          <dt><code>$code</code>
                —
                integer</dt>
          <dd>[optional] The Exception code.</dd>
          <dt><code>$previous</code>
                —
                object</dt>
          <dd>[optional] The previous exception used for the exception chaining. Since 5.3.0<br/><br/><br/>      </dd>
        </dl>
        <h2 id="tests">Test Coverage</h2>
        <div class="styled">
          <h3>Information</h3>
          <ul class="styled">
            <li>Coverage: 9/9 Lines (100%)</li>
            <li>Tests: 243</li>
            <li>Passed: 243 (100%)</li>
          </ul>
          <h3>Tests</h3>
          <ul class="styled">
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testErrorController</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperDenied</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Application\ApplicationTest::testHelperReload</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Common\HelperTest::testResetHelperPath</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testReadRecordError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testDeleteError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\CrudTest::testNotImplementedException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testReadOneError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testUpdateSet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testDeleteSet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Controller\RestTest::testNotImplementedException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\DbTest::testCheckConnectException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\DbTest::testTransactionInvalidCallbackThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\RowTest::testGetRelationException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\TableTest::testFindException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Db\TableTest::testFindException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventManagerTest::testEventSetParamsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\EventTest::testEventSetParamsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\Validator\ValidatorTest::testValidatorException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperApi</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperDispatch</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperUrlException</li>
            <li>[ <span class="testresult-PASSED">PASSED</span> ] — Bluz\Tests\View\ViewTest::testHelperWidget</li>
          </ul>
        </div>
      </section>
    </div>
    <footer>
      <span>Generated using phpDox 0.8.1.1 - Copyright (C) 2010 - 2015 by Arne Blankerts</span>
    </footer>
  </body>
</html>
