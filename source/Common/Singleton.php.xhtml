<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of Singleton.php</title><link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/><link rel="stylesheet" href="../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../namespaces.xhtml">Namespaces</a></li><li><a href="../../interfaces.xhtml">Interfaces</a></li><li><a href="../../classes.xhtml">Classes</a></li><li><a href="../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file Singleton.php</h1><p>
                        Size: 1,238 Bytes - Last Modified: 2016-09-07T15:02:22+00:00</p><section><h2><small>/home/travis/build/bluzphp/framework/src/Common/</small>Singleton.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker covered" href="#line36">36</a><div class="coverage_details"><span>
                                Covered by 630 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirect</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirectTo</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperReload</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li></ul></div><a class="anker covered" href="#line37">37</a><div class="coverage_details"><span>
                                Covered by 630 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirect</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirectTo</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperReload</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li></ul></div><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker" href="#line43">43</a><a class="anker" href="#line44">44</a><a class="anker" href="#line45">45</a><a class="anker covered" href="#line46">46</a><div class="coverage_details"><span>
                                Covered by 653 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\ControllerTest::testHelperDenied</li><li>Bluz\Tests\Controller\ControllerTest::testHelperUser</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Db\DbTest::testCheckConnect</li><li>Bluz\Tests\Db\DbTest::testCheckConnectException</li><li>Bluz\Tests\Db\DbTest::testFetchOne</li><li>Bluz\Tests\Db\DbTest::testFetchRow</li><li>Bluz\Tests\Db\DbTest::testFetchAll</li><li>Bluz\Tests\Db\DbTest::testFetchColumn</li><li>Bluz\Tests\Db\DbTest::testFetchGroup</li><li>Bluz\Tests\Db\DbTest::testFetchColumnGroup</li><li>Bluz\Tests\Db\DbTest::testFetchPairs</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToStdClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToDeclaredClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToInstance</li><li>Bluz\Tests\Db\DbTest::testFetchObjectsToStdClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectsToDeclaredClass</li><li>Bluz\Tests\Db\DbTest::testTransactionTrue</li><li>Bluz\Tests\Db\DbTest::testTransactionFalse</li><li>Bluz\Tests\Db\DbTest::testTransactionInvalidCallbackThrowException</li><li>Bluz\Tests\Db\DbTest::testSelect</li><li>Bluz\Tests\Db\DbTest::testInsert</li><li>Bluz\Tests\Db\DbTest::testUpdate</li><li>Bluz\Tests\Db\DbTest::testDelete</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirect</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirectTo</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperReload</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li></ul></div><a class="anker covered" href="#line47">47</a><div class="coverage_details"><span>
                                Covered by 653 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\ControllerTest::testHelperDenied</li><li>Bluz\Tests\Controller\ControllerTest::testHelperUser</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Db\DbTest::testCheckConnect</li><li>Bluz\Tests\Db\DbTest::testCheckConnectException</li><li>Bluz\Tests\Db\DbTest::testFetchOne</li><li>Bluz\Tests\Db\DbTest::testFetchRow</li><li>Bluz\Tests\Db\DbTest::testFetchAll</li><li>Bluz\Tests\Db\DbTest::testFetchColumn</li><li>Bluz\Tests\Db\DbTest::testFetchGroup</li><li>Bluz\Tests\Db\DbTest::testFetchColumnGroup</li><li>Bluz\Tests\Db\DbTest::testFetchPairs</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToStdClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToDeclaredClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToInstance</li><li>Bluz\Tests\Db\DbTest::testFetchObjectsToStdClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectsToDeclaredClass</li><li>Bluz\Tests\Db\DbTest::testTransactionTrue</li><li>Bluz\Tests\Db\DbTest::testTransactionFalse</li><li>Bluz\Tests\Db\DbTest::testTransactionInvalidCallbackThrowException</li><li>Bluz\Tests\Db\DbTest::testSelect</li><li>Bluz\Tests\Db\DbTest::testInsert</li><li>Bluz\Tests\Db\DbTest::testUpdate</li><li>Bluz\Tests\Db\DbTest::testDelete</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirect</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirectTo</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperReload</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li></ul></div><a class="anker covered" href="#line48">48</a><div class="coverage_details"><span>
                                Covered by 653 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\ControllerTest::testHelperDenied</li><li>Bluz\Tests\Controller\ControllerTest::testHelperUser</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Db\DbTest::testCheckConnect</li><li>Bluz\Tests\Db\DbTest::testCheckConnectException</li><li>Bluz\Tests\Db\DbTest::testFetchOne</li><li>Bluz\Tests\Db\DbTest::testFetchRow</li><li>Bluz\Tests\Db\DbTest::testFetchAll</li><li>Bluz\Tests\Db\DbTest::testFetchColumn</li><li>Bluz\Tests\Db\DbTest::testFetchGroup</li><li>Bluz\Tests\Db\DbTest::testFetchColumnGroup</li><li>Bluz\Tests\Db\DbTest::testFetchPairs</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToStdClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToDeclaredClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectToInstance</li><li>Bluz\Tests\Db\DbTest::testFetchObjectsToStdClass</li><li>Bluz\Tests\Db\DbTest::testFetchObjectsToDeclaredClass</li><li>Bluz\Tests\Db\DbTest::testTransactionTrue</li><li>Bluz\Tests\Db\DbTest::testTransactionFalse</li><li>Bluz\Tests\Db\DbTest::testTransactionInvalidCallbackThrowException</li><li>Bluz\Tests\Db\DbTest::testSelect</li><li>Bluz\Tests\Db\DbTest::testInsert</li><li>Bluz\Tests\Db\DbTest::testUpdate</li><li>Bluz\Tests\Db\DbTest::testDelete</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirect</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperRedirectTo</li><li>Bluz\Tests\Proxy\ResponseTest::testHelperReload</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li></ul></div><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker" href="#line51">51</a><a class="anker" href="#line52">52</a><a class="anker" href="#line53">53</a><a class="anker" href="#line54">54</a><a class="anker" href="#line55">55</a><a class="anker" href="#line56">56</a><a class="anker" href="#line57">57</a><a class="anker covered" href="#line58">58</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li></ul></div><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker" href="#line61">61</a><a class="anker" href="#line62">62</a><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker covered" href="#line66">66</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li></ul></div><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker" href="#line75">75</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * Bluz Framework Component</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * @copyright Bluz PHP Team</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * @link https://github.com/bluzphp/framework</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line8"><br/></div><div id="line9"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * @namespace</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line12"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Bluz</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Common</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><br/></div><div id="line14"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line15"><pre><span class="token T_DOC_COMMENT"> * Singleton</span></pre></div><div id="line16"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * @package  Bluz\Common</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> * @author   Anton Shevchuk</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * @link     https://github.com/bluzphp/framework/wiki/Trait-Singleton</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line21"><pre><span class="token T_TRAIT">trait</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Singleton</span></pre></div><div id="line22"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line23"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line24"><pre><span class="token T_DOC_COMMENT">     * @var static singleton instance</span></pre></div><div id="line25"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line26"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$instance</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line27"><br/></div><div id="line28"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line29"><pre><span class="token T_DOC_COMMENT">     * Set or replace instance</span></pre></div><div id="line30"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line31"><pre><span class="token T_DOC_COMMENT">     * @param  mixed $instance</span></pre></div><div id="line32"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line34"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setInstance</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$instance</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line35"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line36"><pre><span class="token T_WHITESPACE">        </span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$instance</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$instance</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line37"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line38"><br/></div><div id="line39"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     * Get instance</span></pre></div><div id="line41"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line42"><pre><span class="token T_DOC_COMMENT">     * @return static</span></pre></div><div id="line43"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line44"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getInstance</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line45"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line46"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$instance</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line47"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$instance</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_VARIABLE">$instance</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">initInstance</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line50"><br/></div><div id="line51"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line52"><pre><span class="token T_DOC_COMMENT">     * Initialization of class instance</span></pre></div><div id="line53"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line54"><pre><span class="token T_DOC_COMMENT">     * @return static</span></pre></div><div id="line55"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">initInstance</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STATIC">static</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line60"><br/></div><div id="line61"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line62"><pre><span class="token T_DOC_COMMENT">     * Disabled by access level</span></pre></div><div id="line63"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line64"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line65"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line66"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line67"><br/></div><div id="line68"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">     * Disabled by access level</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line71"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__clone</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line72"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line73"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line74"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line75"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.9.0 - Copyright (C) 2010 - 2016 by Arne Blankerts</span></footer></body></html>
