<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:pu="http://schema.phpunit.de/coverage/1.0" lang="en"><head><title>phpDox - Source of Request.php</title><link rel="stylesheet" type="text/css" href="../../css/style.css" media="screen"/><link rel="stylesheet" href="../../css/source.css"/><meta http-equiv="content-type" content="text/html; charset=utf-8"/></head><body><nav class="topnav"><ul><li><div class="logo"><span>/**</span>phpDox</div></li><li class="separator"><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../namespaces.xhtml">Namespaces</a></li><li><a href="../../interfaces.xhtml">Interfaces</a></li><li><a href="../../classes.xhtml">Classes</a></li><li><a href="../../traits.xhtml">Traits</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></nav><div id="mainstage"><div class="box"><ul class="breadcrumb"><li><a href="../../index.xhtml">Overview</a></li><li class="separator"><a href="../../source/index.xhtml">Source</a></li></ul></div><h1>Source of file Request.php</h1><p>
                        Size: 14,065 Bytes - Last Modified: 2015-10-12T10:32:59+00:00</p><section><h2><small>/home/travis/build/bluzphp/framework/src/Http/</small>Request.php</h2><table class="source"><tr><td class="no"><a class="anker" href="#line1">1</a><a class="anker" href="#line2">2</a><a class="anker" href="#line3">3</a><a class="anker" href="#line4">4</a><a class="anker" href="#line5">5</a><a class="anker" href="#line6">6</a><a class="anker" href="#line7">7</a><a class="anker" href="#line8">8</a><a class="anker" href="#line9">9</a><a class="anker" href="#line10">10</a><a class="anker" href="#line11">11</a><a class="anker" href="#line12">12</a><a class="anker" href="#line13">13</a><a class="anker" href="#line14">14</a><a class="anker" href="#line15">15</a><a class="anker" href="#line16">16</a><a class="anker" href="#line17">17</a><a class="anker" href="#line18">18</a><a class="anker" href="#line19">19</a><a class="anker" href="#line20">20</a><a class="anker" href="#line21">21</a><a class="anker" href="#line22">22</a><a class="anker" href="#line23">23</a><a class="anker" href="#line24">24</a><a class="anker" href="#line25">25</a><a class="anker" href="#line26">26</a><a class="anker" href="#line27">27</a><a class="anker" href="#line28">28</a><a class="anker" href="#line29">29</a><a class="anker" href="#line30">30</a><a class="anker" href="#line31">31</a><a class="anker" href="#line32">32</a><a class="anker" href="#line33">33</a><a class="anker" href="#line34">34</a><a class="anker" href="#line35">35</a><a class="anker" href="#line36">36</a><a class="anker" href="#line37">37</a><a class="anker" href="#line38">38</a><a class="anker" href="#line39">39</a><a class="anker" href="#line40">40</a><a class="anker" href="#line41">41</a><a class="anker" href="#line42">42</a><a class="anker covered" href="#line43">43</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line44">44</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line45">45</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker" href="#line46">46</a><a class="anker" href="#line47">47</a><a class="anker covered" href="#line48">48</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker" href="#line49">49</a><a class="anker" href="#line50">50</a><a class="anker covered" href="#line51">51</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line52">52</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line53">53</a><div class="coverage_details"><span>
                                Covered by 5 test(s):
                            </span><ul><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li></ul></div><a class="anker covered" href="#line54">54</a><div class="coverage_details"><span>
                                Covered by 5 test(s):
                            </span><ul><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li></ul></div><a class="anker covered" href="#line55">55</a><div class="coverage_details"><span>
                                Covered by 702 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line56">56</a><div class="coverage_details"><span>
                                Covered by 702 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line57">57</a><div class="coverage_details"><span>
                                Covered by 702 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line58">58</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker" href="#line59">59</a><a class="anker" href="#line60">60</a><a class="anker covered" href="#line61">61</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line62">62</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker" href="#line63">63</a><a class="anker" href="#line64">64</a><a class="anker" href="#line65">65</a><a class="anker" href="#line66">66</a><a class="anker" href="#line67">67</a><a class="anker" href="#line68">68</a><a class="anker" href="#line69">69</a><a class="anker" href="#line70">70</a><a class="anker" href="#line71">71</a><a class="anker" href="#line72">72</a><a class="anker" href="#line73">73</a><a class="anker" href="#line74">74</a><a class="anker covered" href="#line75">75</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line76">76</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line77">77</a><div class="coverage_details"><span>
                                Covered by 2 test(s):
                            </span><ul><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line78">78</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line79">79</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGet</li></ul></div><a class="anker covered" href="#line80">80</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line81">81</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGet</li></ul></div><a class="anker covered" href="#line82">82</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line83">83</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGet</li></ul></div><a class="anker covered" href="#line84">84</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line85">85</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGet</li></ul></div><a class="anker covered" href="#line86">86</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line87">87</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGet</li></ul></div><a class="anker covered" href="#line88">88</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line89">89</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker covered" href="#line90">90</a><div class="coverage_details"><span>
                                Covered by 71 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Http\RequestTest::testGet</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker" href="#line91">91</a><a class="anker" href="#line92">92</a><a class="anker" href="#line93">93</a><a class="anker" href="#line94">94</a><a class="anker" href="#line95">95</a><a class="anker" href="#line96">96</a><a class="anker" href="#line97">97</a><a class="anker" href="#line98">98</a><a class="anker" href="#line99">99</a><a class="anker covered" href="#line100">100</a><div class="coverage_details"><span>
                                Covered by 3 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li></ul></div><a class="anker" href="#line101">101</a><a class="anker" href="#line102">102</a><a class="anker" href="#line103">103</a><a class="anker" href="#line104">104</a><a class="anker" href="#line105">105</a><a class="anker" href="#line106">106</a><a class="anker" href="#line107">107</a><a class="anker" href="#line108">108</a><a class="anker" href="#line109">109</a><a class="anker covered" href="#line110">110</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker" href="#line111">111</a><a class="anker" href="#line112">112</a><a class="anker" href="#line113">113</a><a class="anker" href="#line114">114</a><a class="anker" href="#line115">115</a><a class="anker" href="#line116">116</a><a class="anker" href="#line117">117</a><a class="anker" href="#line118">118</a><a class="anker" href="#line119">119</a><a class="anker" href="#line120">120</a><a class="anker" href="#line121">121</a><a class="anker covered" href="#line122">122</a><div class="coverage_details"><span>
                                Covered by 5 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li></ul></div><a class="anker" href="#line123">123</a><a class="anker" href="#line124">124</a><a class="anker" href="#line125">125</a><a class="anker" href="#line126">126</a><a class="anker" href="#line127">127</a><a class="anker" href="#line128">128</a><a class="anker" href="#line129">129</a><a class="anker" href="#line130">130</a><a class="anker" href="#line131">131</a><a class="anker covered" href="#line132">132</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testIsMethods</li></ul></div><a class="anker covered" href="#line133">133</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testIsMethods</li></ul></div><a class="anker" href="#line134">134</a><a class="anker" href="#line135">135</a><a class="anker" href="#line136">136</a><a class="anker" href="#line137">137</a><a class="anker" href="#line138">138</a><a class="anker" href="#line139">139</a><a class="anker" href="#line140">140</a><a class="anker" href="#line141">141</a><a class="anker" href="#line142">142</a><a class="anker" href="#line143">143</a><a class="anker" href="#line144">144</a><a class="anker" href="#line145">145</a><a class="anker" href="#line146">146</a><a class="anker" href="#line147">147</a><a class="anker" href="#line148">148</a><a class="anker" href="#line149">149</a><a class="anker covered" href="#line150">150</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line151">151</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker covered" href="#line152">152</a><div class="coverage_details"><span>
                                Covered by 2 test(s):
                            </span><ul><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li></ul></div><a class="anker" href="#line153">153</a><a class="anker" href="#line154">154</a><a class="anker" href="#line155">155</a><a class="anker covered" href="#line156">156</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker" href="#line157">157</a><a class="anker" href="#line158">158</a><a class="anker" href="#line159">159</a><a class="anker" href="#line160">160</a><a class="anker" href="#line161">161</a><a class="anker" href="#line162">162</a><a class="anker" href="#line163">163</a><a class="anker" href="#line164">164</a><a class="anker" href="#line165">165</a><a class="anker" href="#line166">166</a><a class="anker" href="#line167">167</a><a class="anker" href="#line168">168</a><a class="anker covered" href="#line169">169</a><div class="coverage_details"><span>
                                Covered by 707 test(s):
                            </span><ul><li>Bluz\Tests\Acl\AclTest::testAllow</li><li>Bluz\Tests\Acl\AclTest::testDeny</li><li>Bluz\Tests\Application\ApplicationTest::testGettersOfPackages</li><li>Bluz\Tests\Application\ApplicationTest::testGetConfigData</li><li>Bluz\Tests\Application\ApplicationTest::testRegistry</li><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testRender</li><li>Bluz\Tests\Application\ApplicationTest::testHelperDenied</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirect</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Application\ApplicationTest::testHelperReload</li><li>Bluz\Tests\Application\ApplicationTest::testHelperUser</li><li>Bluz\Tests\Auth\AuthTest::testGetAuthRow</li><li>Bluz\Tests\Cache\CacheTest::testCacheWithEmptyConfigurationThrowsException</li><li>Bluz\Tests\Cache\CacheTest::testFileCache</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheWithTags</li><li>Bluz\Tests\Cache\CacheTest::testFileCacheFlush</li><li>Bluz\Tests\Cli\RequestTest::testInitialRequestWithoutUriArgumentThrowException</li><li>Bluz\Tests\Cli\ResponseTest::testSendBody</li><li>Bluz\Tests\Cli\ResponseTest::testSendBodyWithView</li><li>Bluz\Tests\Common\ContainerTest::testContainerSetterAndGetter</li><li>Bluz\Tests\Common\ContainerTest::testResetContainer</li><li>Bluz\Tests\Common\ContainerTest::testRegularAccess</li><li>Bluz\Tests\Common\ContainerTest::testMagicAccess</li><li>Bluz\Tests\Common\ContainerTest::testArrayAccess</li><li>Bluz\Tests\Common\ContainerTest::testJsonSerialize</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall</li><li>Bluz\Tests\Common\HelperTest::testInvalidHelperCall2</li><li>Bluz\Tests\Common\HelperTest::testAddHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPath</li><li>Bluz\Tests\Common\HelperTest::testSetHelperPaths</li><li>Bluz\Tests\Common\HelperTest::testResetHelperPath</li><li>Bluz\Tests\Common\NilTest::testComplexNill</li><li>Bluz\Tests\Common\OptionsTest::testSetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetOptions</li><li>Bluz\Tests\Common\OptionsTest::testGetFalseOption</li><li>Bluz\Tests\Common\SingletonTest::testGetInstance</li><li>Bluz\Tests\Common\SingletonTest::testProtectedMethods</li><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testExportReflectionWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionClassWithData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutData</li><li>Bluz\Tests\Controller\ReflectionTest::testReflectionWithoutReturn</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Db\QueryTest::testSelect</li><li>Bluz\Tests\Db\QueryTest::testSelectWithGroupAndHaving</li><li>Bluz\Tests\Db\QueryTest::testSelectWithInnerJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectWithRightJoin</li><li>Bluz\Tests\Db\QueryTest::testSelectToStringConversion</li><li>Bluz\Tests\Db\QueryTest::testInsert</li><li>Bluz\Tests\Db\QueryTest::testUpdate</li><li>Bluz\Tests\Db\QueryTest::testDelete</li><li>Bluz\Tests\Db\RowTest::testGetRelationException</li><li>Bluz\Tests\Db\RowTest::testOffsetSet</li><li>Bluz\Tests\Db\RowTest::testOffsetExists</li><li>Bluz\Tests\Db\RowTest::testOffsetUnset</li><li>Bluz\Tests\Db\RowTest::testOffsetGet</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKeyException</li><li>Bluz\Tests\Db\TableTest::testGetPrimaryKey</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #0</li><li>Bluz\Tests\Db\TableTest::testFindException with data set #1</li><li>Bluz\Tests\EventManagerTest::testTriggerSimpleEvent</li><li>Bluz\Tests\EventManagerTest::testTriggerThreeEvents</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithPriority</li><li>Bluz\Tests\EventManagerTest::testTriggerTwoEventsWithAbort</li><li>Bluz\Tests\EventManagerTest::testTriggerWithNamespace</li><li>Bluz\Tests\EventManagerTest::testTriggerWithTarget</li><li>Bluz\Tests\EventManagerTest::testTriggerWithParams</li><li>Bluz\Tests\EventManagerTest::testEventSetParamsException</li><li>Bluz\Tests\EventTest::testEventMethods</li><li>Bluz\Tests\EventTest::testEventMethodsWithObject</li><li>Bluz\Tests\EventTest::testEventSetParamsException</li><li>Bluz\Tests\Grid\GridTest::testProcessRequest</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testWrongPageThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongDefaultLimitThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongColumnFilterThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongFilterNameThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderThrowException</li><li>Bluz\Tests\Grid\GridTest::testWrongOrderDirectionThrowException</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterColumnReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperWrongFilterNameReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperNextReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPages</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperPrevReturnNull</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Grid\GridTest::testHelperTotal</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArrayGrid</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testArraySourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testOrders</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilters</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterNotEqual</li><li>Bluz\Tests\Grid\Source\ArraySourceTest::testFilterLike</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectGrid</li><li>Bluz\Tests\Grid\Source\SelectSourceTest::testSelectSourceThrowsGridException</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlGrid</li><li>Bluz\Tests\Grid\Source\GridTest::testSqlSourceThrowsGridException</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPrivate</li><li>Bluz\Tests\Http\CacheControlTest::testCacheControlPublic</li><li>Bluz\Tests\Http\CacheControlTest::testTtl</li><li>Bluz\Tests\Http\CacheControlTest::testClientTtl</li><li>Bluz\Tests\Http\CacheControlTest::testAge</li><li>Bluz\Tests\Http\CacheControlTest::testDefaultAge</li><li>Bluz\Tests\Http\CacheControlTest::testEtag</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsString</li><li>Bluz\Tests\Http\CacheControlTest::testExpiresAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsString</li><li>Bluz\Tests\Http\CacheControlTest::testLastModifiedAsDate</li><li>Bluz\Tests\Http\CacheControlTest::testExpire</li><li>Bluz\Tests\Http\FileTest::testSetName</li><li>Bluz\Tests\Http\FileTest::testGetName</li><li>Bluz\Tests\Http\FileTest::testGetFullName</li><li>Bluz\Tests\Http\FileTest::testGetExtension</li><li>Bluz\Tests\Http\FileTest::testGetType</li><li>Bluz\Tests\Http\FileTest::testGetMimeType</li><li>Bluz\Tests\Http\FileTest::testGetErrorCode</li><li>Bluz\Tests\Http\FileTest::testGetSize</li><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li><li>Bluz\Tests\Http\RequestTest::testIsMethods</li><li>Bluz\Tests\Http\ResponseTest::testResponseBody</li><li>Bluz\Tests\Layout\LayoutTest::testSetContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testSetInvalidCallableContent</li><li>Bluz\Tests\Layout\LayoutTest::testHelperBreadcrumbs</li><li>Bluz\Tests\Layout\LayoutTest::testHelperLink</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMeta</li><li>Bluz\Tests\Layout\LayoutTest::testHelperMetaArray</li><li>Bluz\Tests\Layout\LayoutTest::testHelperTitle</li><li>Bluz\Tests\Mailer\MailerTest::testWrongConfigurationThrowException</li><li>Bluz\Tests\Mailer\MailerTest::testWithoutPHPMailerThrowException</li><li>Bluz\Tests\Messages\MessagesTest::testMessages</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesWithDirectives</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesEmpty</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPop</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAll</li><li>Bluz\Tests\Messages\MessagesTest::testMessagesPopAllForEmpty</li><li>Bluz\Tests\Registry\RegistryTest::testSetFromArray</li><li>Bluz\Tests\Registry\RegistryTest::testSetGet</li><li>Bluz\Tests\Registry\RegistryTest::testContains</li><li>Bluz\Tests\Registry\RegistryTest::testRemove</li><li>Bluz\Tests\Request\RequestTest::testIsMethods</li><li>Bluz\Tests\Request\RequestTest::testParamManipulation</li><li>Bluz\Tests\Response\ResponseTest::testGetters</li><li>Bluz\Tests\Response\ResponseTest::testSetGetReasonPhrase</li><li>Bluz\Tests\Response\ResponseTest::testSetCookiesWithDatetime</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithEmptyCookieNameThrowException</li><li>Bluz\Tests\Response\ResponseTest::testSetCookieWithWrongDateNameThrowException</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\Translator\TranslatorTest::testInvalidConfigurationThrowException</li><li>Bluz\Tests\Translator\TranslatorTest::testTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslate</li><li>Bluz\Tests\Translator\TranslatorTest::testPluralTranslateWithAdditionalParams</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testValidAlphaNumericCharsShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidAlphaNumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testValidAlphanumericCharsShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\AlphaTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #0</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #1</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #2</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #3</li><li>Bluz\Tests\Validator\Rule\ArrayInputTest::testInvalidArray with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesBetweenBoundsShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #8</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #9</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testValuesOutBoundsShouldRaiseException with data set #10</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\BetweenTest::testInvalidConstructionParamsShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnTrueIfCallbackReturnsTrue</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldReturnFalseIfCallbackReturnsFalse</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptArrayCallbackDefinitions</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testCallbackValidatorShouldAcceptFunctionNamesAsString</li><li>Bluz\Tests\Validator\Rule\CallbackTest::testInvalidCallbacksShouldRaiseComponentExceptionUponInstantiation</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\ConditionTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsContainingExpectedValueShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #3</li><li>Bluz\Tests\Validator\Rule\ContainsTest::testStringsNotContainsExpectedValueShouldNotPass with data set #4</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testValidCountryCodeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\CountryCodeTest::testInvalidCountryCodeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testValidCreditCardsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #0</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #1</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #2</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #3</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #4</li><li>Bluz\Tests\Validator\Rule\CreditCardTest::testInvalidCreditCardsShouldThrowCreditCardException with data set #5</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateWithoutFormatShouldValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testDateTimeInstancesShouldAlwaysValidate</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testValidDateShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\DateTest::testInvalidateDateThrowException with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnTrue with data set #4</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #0</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #1</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #2</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #3</li><li>Respect\Validation\Rules\DomainTest::testValidDomainsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #0</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #1</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #2</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #3</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #4</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #5</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #6</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #7</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #8</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #9</li><li>Bluz\Tests\Validator\Rule\EmailTest::testInvalidEmailsShouldFailValidation with data set #10</li><li>Bluz\Tests\Validator\Rule\EmailTest::testValidEmailWithDomainCheck</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsContainingExpectedValueShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #0</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #1</li><li>Bluz\Tests\Validator\Rule\EqualsTest::testStringsNotEqualsExpectedValueShouldNotPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #4</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #5</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #6</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #7</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testFloatNumbersShouldPass with data set #8</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\FloatInputTest::testNotFloatNumbersShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testSuccessInValidatorCases with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #0</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #1</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #2</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #3</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #4</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #5</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #6</li><li>Bluz\Tests\Validator\Rule\InTest::testInvalidInChecksShouldThrowInException with data set #7</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testValidIntegersShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IntegerTest::testInvalidIntegersShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testValidIpsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidIpsShouldReturnFalseAndThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testInvalidRangeShouldRaiseException with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #8</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #9</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #10</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #11</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #12</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #13</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #14</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #15</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsBetweenRangeShouldReturnTrue with data set #16</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\IpTest::testIpsOutsideRangeShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\JsonTest::testValidJsonsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #0</li><li>Bluz\Tests\Validator\Rule\JsonTest::testInvalidJsonsShouldThrowJsonException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testValidAlphanumericCharsShouldReturnTrue with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinNumericTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testValidAlphanumericCharsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #5</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #6</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #7</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #8</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #9</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidAlphanumericCharsShouldReturnFalse with data set #10</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testInvalidConstructorParamsShouldThrowComponentException with data set #2</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #0</li><li>Bluz\Tests\Validator\Rule\LatinTest::testAdditionalCharsShouldBeRespected with data set #1</li><li>Bluz\Tests\Validator\Rule\LatinTest::testTemplates</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthInsideBoundsShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideValidBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #2</li><li>Bluz\Tests\Validator\Rule\LengthTest::testLengthOutsideBoundsShouldThrowLengthException with data set #3</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #0</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #1</li><li>Bluz\Tests\Validator\Rule\LengthTest::testInvalidConstructorParametersShouldThrowComponentExceptionUponInstantiation with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MaxTest::testValidMaxInputShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MaxTest::testInvalidMaxValueShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\MinTest::testValidMinShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #0</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #1</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #2</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #3</li><li>Bluz\Tests\Validator\Rule\MinTest::testInvalidMinShouldReturnFalse with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNegativeShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #0</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #1</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #2</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #3</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #4</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #5</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #6</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #7</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #8</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #9</li><li>Bluz\Tests\Validator\Rule\NegativeTest::testNotNegativeNumbersShouldThrowNegativeException with data set #10</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithNoWhitespaceShouldPass with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #0</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #1</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #2</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #3</li><li>Bluz\Tests\Validator\Rule\NoWhitespaceTest::testStringWithWhitespaceShouldFail with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringNotEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #0</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #1</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #2</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #3</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #4</li><li>Bluz\Tests\Validator\Rule\NotEmptyTest::testStringEmpty with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNumeric with data set #5</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #0</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #1</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #2</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #3</li><li>Bluz\Tests\Validator\Rule\NumericTest::testNotNumeric with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #0</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #1</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #2</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #3</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #4</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #5</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #6</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #7</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #8</li><li>Bluz\Tests\Validator\Rule\PositiveTest::testNotPositive with data set #9</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testValidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #0</li><li>Bluz\Tests\Validator\Rule\RegexTest::testInvalidRegexp with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #2</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #3</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testRequired with data set #4</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #0</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #1</li><li>Bluz\Tests\Validator\Rule\RequiredTest::testNotExists with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testValidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #0</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #1</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #2</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #3</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #4</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #5</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #6</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #7</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #8</li><li>Bluz\Tests\Validator\Rule\SlugTest::testInvalidSlug with data set #9</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #0</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #1</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #2</li><li>Bluz\Tests\Validator\Rule\StringInputTest::testNotString with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testValidVersionShouldReturnTrue with data set #6</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #0</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #1</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #2</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #3</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #4</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #5</li><li>Bluz\Tests\Validator\Rule\VersionTest::testInvalidVersionShouldThrowException with data set #6</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRule</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForOneRuleForArray</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSet</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForRuleSetAndObject</li><li>Bluz\Tests\Validator\ValidatorBuilderTest::testValidatorBuilderForEmptySet</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCreateShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testStaticCallsShouldReturnNewValidator</li><li>Bluz\Tests\Validator\ValidatorTest::testInvalidRuleClassShouldThrowComponentException</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForSingleValidatorShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testValidRules</li><li>Bluz\Tests\Validator\ValidatorTest::testSetCustomErrorTextForValidatorChainShouldUseItAsErrorMessage</li><li>Bluz\Tests\Validator\ValidatorTest::testErrorTextValidationInComplex</li><li>Bluz\Tests\Validator\ValidatorTest::testAssertComplexRuleValidation</li><li>Bluz\Tests\Validator\ValidatorTest::testValidatorException</li><li>Bluz\Tests\View\ViewTest::testMagicMethods</li><li>Bluz\Tests\View\ViewTest::testData</li><li>Bluz\Tests\View\ViewTest::testSerialization</li><li>Bluz\Tests\View\ViewTest::testJson</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperApi</li><li>Bluz\Tests\View\ViewTest::testHelperAttributes</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperCheckbox</li><li>Bluz\Tests\View\ViewTest::testHelperController</li><li>Bluz\Tests\View\ViewTest::testHelperDispatch</li><li>Bluz\Tests\View\ViewTest::testHelperException</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperHeadStyle</li><li>Bluz\Tests\View\ViewTest::testHelperModule</li><li>Bluz\Tests\View\ViewTest::testHelperPartial</li><li>Bluz\Tests\View\ViewTest::testHelperPartialNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoop</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopInvalidArgumentsTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperPartialLoopNotFoundTrowsException</li><li>Bluz\Tests\View\ViewTest::testHelperRadio</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperScriptPlain</li><li>Bluz\Tests\View\ViewTest::testHelperSelect</li><li>Bluz\Tests\View\ViewTest::testHelperSelectWithSelectedElement</li><li>Bluz\Tests\View\ViewTest::testHelperSelectMultiple</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperStylePlain</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li><li>Bluz\Tests\View\ViewTest::testHelperUrlException</li><li>Bluz\Tests\View\ViewTest::testHelperUser</li><li>Bluz\Tests\View\ViewTest::testHelperWidget</li></ul></div><a class="anker" href="#line170">170</a><a class="anker" href="#line171">171</a><a class="anker" href="#line172">172</a><a class="anker" href="#line173">173</a><a class="anker" href="#line174">174</a><a class="anker" href="#line175">175</a><a class="anker" href="#line176">176</a><a class="anker" href="#line177">177</a><a class="anker" href="#line178">178</a><a class="anker" href="#line179">179</a><a class="anker" href="#line180">180</a><a class="anker" href="#line181">181</a><a class="anker" href="#line182">182</a><a class="anker covered" href="#line183">183</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker covered" href="#line184">184</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Controller\CrudTest::testNewRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecord</li><li>Bluz\Tests\Controller\CrudTest::testReadRecordError</li><li>Bluz\Tests\Controller\CrudTest::testCreate</li><li>Bluz\Tests\Controller\CrudTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testUpdate</li><li>Bluz\Tests\Controller\CrudTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\CrudTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\CrudTest::testDelete</li><li>Bluz\Tests\Controller\CrudTest::testDeleteError</li><li>Bluz\Tests\Controller\CrudTest::testNotImplementedException</li><li>Bluz\Tests\Controller\RestTest::testOverviewOne</li><li>Bluz\Tests\Controller\RestTest::testOverviewSet</li><li>Bluz\Tests\Controller\RestTest::testReadOne</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithRelations</li><li>Bluz\Tests\Controller\RestTest::testReadOneWithOneRelation</li><li>Bluz\Tests\Controller\RestTest::testReadOneError</li><li>Bluz\Tests\Controller\RestTest::testReadSet</li><li>Bluz\Tests\Controller\RestTest::testReadSetWithRange</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Controller\RestTest::testCreateWithPrimaryError</li><li>Bluz\Tests\Controller\RestTest::testCreateWithoutDataError</li><li>Bluz\Tests\Controller\RestTest::testCreateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdate</li><li>Bluz\Tests\Controller\RestTest::testUpdateWithSameDate</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotFoundError</li><li>Bluz\Tests\Controller\RestTest::testUpdateNotDataError</li><li>Bluz\Tests\Controller\RestTest::testUpdateValidationErrors</li><li>Bluz\Tests\Controller\RestTest::testUpdateSet</li><li>Bluz\Tests\Controller\RestTest::testDelete</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithInvalidPrimary</li><li>Bluz\Tests\Controller\RestTest::testDeleteWithoutData</li><li>Bluz\Tests\Controller\RestTest::testDeleteSet</li><li>Bluz\Tests\Controller\RestTest::testOptionsOne</li><li>Bluz\Tests\Controller\RestTest::testOptionsSet</li><li>Bluz\Tests\Controller\RestTest::testNotImplementedException</li><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker" href="#line185">185</a><a class="anker" href="#line186">186</a><a class="anker covered" href="#line187">187</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker" href="#line188">188</a><a class="anker" href="#line189">189</a><a class="anker" href="#line190">190</a><a class="anker" href="#line191">191</a><a class="anker" href="#line192">192</a><a class="anker" href="#line193">193</a><a class="anker" href="#line194">194</a><a class="anker" href="#line195">195</a><a class="anker" href="#line196">196</a><a class="anker" href="#line197">197</a><a class="anker" href="#line198">198</a><a class="anker" href="#line199">199</a><a class="anker" href="#line200">200</a><a class="anker covered" href="#line201">201</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker covered" href="#line202">202</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker" href="#line203">203</a><a class="anker" href="#line204">204</a><a class="anker covered" href="#line205">205</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker" href="#line206">206</a><a class="anker" href="#line207">207</a><a class="anker" href="#line208">208</a><a class="anker" href="#line209">209</a><a class="anker" href="#line210">210</a><a class="anker" href="#line211">211</a><a class="anker" href="#line212">212</a><a class="anker" href="#line213">213</a><a class="anker" href="#line214">214</a><a class="anker" href="#line215">215</a><a class="anker" href="#line216">216</a><a class="anker" href="#line217">217</a><a class="anker" href="#line218">218</a><a class="anker" href="#line219">219</a><a class="anker covered" href="#line220">220</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker covered" href="#line221">221</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker" href="#line222">222</a><a class="anker" href="#line223">223</a><a class="anker covered" href="#line224">224</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Http\RequestTest::testGetters</li></ul></div><a class="anker" href="#line225">225</a><a class="anker" href="#line226">226</a><a class="anker" href="#line227">227</a><a class="anker" href="#line228">228</a><a class="anker" href="#line229">229</a><a class="anker" href="#line230">230</a><a class="anker" href="#line231">231</a><a class="anker" href="#line232">232</a><a class="anker" href="#line233">233</a><a class="anker" href="#line234">234</a><a class="anker" href="#line235">235</a><a class="anker" href="#line236">236</a><a class="anker" href="#line237">237</a><a class="anker" href="#line238">238</a><a class="anker" href="#line239">239</a><a class="anker" href="#line240">240</a><a class="anker" href="#line241">241</a><a class="anker" href="#line242">242</a><a class="anker" href="#line243">243</a><a class="anker" href="#line244">244</a><a class="anker" href="#line245">245</a><a class="anker covered" href="#line246">246</a><div class="coverage_details"><span>
                                Covered by 5 test(s):
                            </span><ul><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li></ul></div><a class="anker covered" href="#line247">247</a><div class="coverage_details"><span>
                                Covered by 5 test(s):
                            </span><ul><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li></ul></div><a class="anker covered" href="#line248">248</a><div class="coverage_details"><span>
                                Covered by 5 test(s):
                            </span><ul><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li></ul></div><a class="anker covered" href="#line249">249</a><div class="coverage_details"><span>
                                Covered by 5 test(s):
                            </span><ul><li>Bluz\Tests\Http\FileUploadTest::testFileUpload</li><li>Bluz\Tests\Http\FileUploadTest::testFilesUploadWithNumericSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithStringSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithTwoSubKey</li><li>Bluz\Tests\Http\FileUploadTest::testFileUploadWithThreeSubKey</li></ul></div><a class="anker" href="#line250">250</a><a class="anker" href="#line251">251</a><a class="anker" href="#line252">252</a><a class="anker" href="#line253">253</a><a class="anker" href="#line254">254</a><a class="anker" href="#line255">255</a><a class="anker" href="#line256">256</a><a class="anker" href="#line257">257</a><a class="anker" href="#line258">258</a><a class="anker" href="#line259">259</a><a class="anker" href="#line260">260</a><a class="anker" href="#line261">261</a><a class="anker" href="#line262">262</a><a class="anker covered" href="#line263">263</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker covered" href="#line264">264</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker" href="#line265">265</a><a class="anker" href="#line266">266</a><a class="anker" href="#line267">267</a><a class="anker covered" href="#line268">268</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker covered" href="#line269">269</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker covered" href="#line270">270</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker" href="#line271">271</a><a class="anker covered" href="#line272">272</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker" href="#line273">273</a><a class="anker covered" href="#line274">274</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker covered" href="#line275">275</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker covered" href="#line276">276</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker covered" href="#line277">277</a><div class="coverage_details"><span>
                                Covered by 1 test(s):
                            </span><ul><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li></ul></div><a class="anker" href="#line278">278</a><a class="anker" href="#line279">279</a><a class="anker" href="#line280">280</a><a class="anker" href="#line281">281</a><a class="anker" href="#line282">282</a><a class="anker" href="#line283">283</a><a class="anker" href="#line284">284</a><a class="anker" href="#line285">285</a><a class="anker" href="#line286">286</a><a class="anker" href="#line287">287</a><a class="anker" href="#line288">288</a><a class="anker" href="#line289">289</a><a class="anker covered" href="#line290">290</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line291">291</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line292">292</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line293">293</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line294">294</a><a class="anker" href="#line295">295</a><a class="anker" href="#line296">296</a><a class="anker" href="#line297">297</a><a class="anker" href="#line298">298</a><a class="anker" href="#line299">299</a><a class="anker" href="#line300">300</a><a class="anker" href="#line301">301</a><a class="anker" href="#line302">302</a><a class="anker covered" href="#line303">303</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line304">304</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line305">305</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line306">306</a><a class="anker covered" href="#line307">307</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line308">308</a><a class="anker" href="#line309">309</a><a class="anker" href="#line310">310</a><a class="anker" href="#line311">311</a><a class="anker" href="#line312">312</a><a class="anker" href="#line313">313</a><a class="anker" href="#line314">314</a><a class="anker" href="#line315">315</a><a class="anker" href="#line316">316</a><a class="anker" href="#line317">317</a><a class="anker" href="#line318">318</a><a class="anker" href="#line319">319</a><a class="anker" href="#line320">320</a><a class="anker" href="#line321">321</a><a class="anker" href="#line322">322</a><a class="anker" href="#line323">323</a><a class="anker" href="#line324">324</a><a class="anker" href="#line325">325</a><a class="anker" href="#line326">326</a><a class="anker" href="#line327">327</a><a class="anker" href="#line328">328</a><a class="anker" href="#line329">329</a><a class="anker" href="#line330">330</a><a class="anker" href="#line331">331</a><a class="anker" href="#line332">332</a><a class="anker" href="#line333">333</a><a class="anker" href="#line334">334</a><a class="anker" href="#line335">335</a><a class="anker" href="#line336">336</a><a class="anker" href="#line337">337</a><a class="anker" href="#line338">338</a><a class="anker" href="#line339">339</a><a class="anker" href="#line340">340</a><a class="anker covered" href="#line341">341</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line342">342</a><a class="anker" href="#line343">343</a><a class="anker covered" href="#line344">344</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line345">345</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line346">346</a><a class="anker" href="#line347">347</a><a class="anker" href="#line348">348</a><a class="anker" href="#line349">349</a><a class="anker" href="#line350">350</a><a class="anker covered" href="#line351">351</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line352">352</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line353">353</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line354">354</a><a class="anker" href="#line355">355</a><a class="anker" href="#line356">356</a><a class="anker" href="#line357">357</a><a class="anker" href="#line358">358</a><a class="anker covered" href="#line359">359</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line360">360</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line361">361</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line362">362</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line363">363</a><a class="anker" href="#line364">364</a><a class="anker" href="#line365">365</a><a class="anker" href="#line366">366</a><a class="anker" href="#line367">367</a><a class="anker" href="#line368">368</a><a class="anker" href="#line369">369</a><a class="anker" href="#line370">370</a><a class="anker" href="#line371">371</a><a class="anker covered" href="#line372">372</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line373">373</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line374">374</a><a class="anker" href="#line375">375</a><a class="anker" href="#line376">376</a><a class="anker" href="#line377">377</a><a class="anker" href="#line378">378</a><a class="anker" href="#line379">379</a><a class="anker" href="#line380">380</a><a class="anker covered" href="#line381">381</a><div class="coverage_details"><span>
                                Covered by 35 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line382">382</a><a class="anker" href="#line383">383</a><a class="anker" href="#line384">384</a><a class="anker" href="#line385">385</a><a class="anker" href="#line386">386</a><a class="anker" href="#line387">387</a><a class="anker" href="#line388">388</a><a class="anker" href="#line389">389</a><a class="anker" href="#line390">390</a><a class="anker" href="#line391">391</a><a class="anker" href="#line392">392</a><a class="anker" href="#line393">393</a><a class="anker" href="#line394">394</a><a class="anker" href="#line395">395</a><a class="anker covered" href="#line396">396</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line397">397</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line398">398</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line399">399</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line400">400</a><a class="anker covered" href="#line401">401</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line402">402</a><a class="anker covered" href="#line403">403</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line404">404</a><a class="anker covered" href="#line405">405</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line406">406</a><a class="anker" href="#line407">407</a><a class="anker" href="#line408">408</a><a class="anker" href="#line409">409</a><a class="anker" href="#line410">410</a><a class="anker covered" href="#line411">411</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line412">412</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line413">413</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line414">414</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line415">415</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line416">416</a><a class="anker" href="#line417">417</a><a class="anker covered" href="#line418">418</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line419">419</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line420">420</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line421">421</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line422">422</a><a class="anker" href="#line423">423</a><a class="anker" href="#line424">424</a><a class="anker covered" href="#line425">425</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line426">426</a><a class="anker" href="#line427">427</a><a class="anker covered" href="#line428">428</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line429">429</a><a class="anker" href="#line430">430</a><a class="anker" href="#line431">431</a><a class="anker" href="#line432">432</a><a class="anker covered" href="#line433">433</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line434">434</a><a class="anker" href="#line435">435</a><a class="anker" href="#line436">436</a><a class="anker" href="#line437">437</a><a class="anker covered" href="#line438">438</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line439">439</a><a class="anker covered" href="#line440">440</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line441">441</a><a class="anker" href="#line442">442</a><a class="anker" href="#line443">443</a><a class="anker covered" href="#line444">444</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line445">445</a><a class="anker" href="#line446">446</a><a class="anker covered" href="#line447">447</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker covered" href="#line448">448</a><div class="coverage_details"><span>
                                Covered by 37 test(s):
                            </span><ul><li>Bluz\Tests\Application\ApplicationTest::testIndexController</li><li>Bluz\Tests\Application\ApplicationTest::testErrorController</li><li>Bluz\Tests\Application\ApplicationTest::testHelperRedirectTo</li><li>Bluz\Tests\Controller\RestTest::testCreate</li><li>Bluz\Tests\Grid\GridTest::testCustomControllerAndModule</li><li>Bluz\Tests\Grid\GridTest::testHelperFilter</li><li>Bluz\Tests\Grid\GridTest::testHelperFirst</li><li>Bluz\Tests\Grid\GridTest::testHelperLast</li><li>Bluz\Tests\Grid\GridTest::testHelperLimit</li><li>Bluz\Tests\Grid\GridTest::testHelperNext</li><li>Bluz\Tests\Grid\GridTest::testHelperOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperOrderReverseCurrentOrder</li><li>Bluz\Tests\Grid\GridTest::testHelperPage</li><li>Bluz\Tests\Grid\GridTest::testHelperPrev</li><li>Bluz\Tests\Grid\GridTest::testHelperReset</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #5</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #6</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #7</li><li>Bluz\Tests\Router\RouterTest::testRouterUrl with data set #8</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #0</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #1</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #2</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #3</li><li>Bluz\Tests\Router\RouterTest::testRouterUrlWithCustomControllerRoute with data set #4</li><li>Bluz\Tests\Router\RouterTest::testRouterFullUrl</li><li>Bluz\Tests\View\ViewTest::testHelperAhref</li><li>Bluz\Tests\View\ViewTest::testHelperBaseUrl</li><li>Bluz\Tests\View\ViewTest::testHelperHeadScript</li><li>Bluz\Tests\View\ViewTest::testHelperRedactor</li><li>Bluz\Tests\View\ViewTest::testHelperScript</li><li>Bluz\Tests\View\ViewTest::testHelperStyle</li><li>Bluz\Tests\View\ViewTest::testHelperUrl</li></ul></div><a class="anker" href="#line449">449</a><a class="anker" href="#line450">450</a><a class="anker" href="#line451">451</a><a class="anker" href="#line452">452</a><a class="anker" href="#line453">453</a><a class="anker" href="#line454">454</a><a class="anker" href="#line455">455</a><a class="anker" href="#line456">456</a><a class="anker" href="#line457">457</a><a class="anker" href="#line458">458</a><a class="anker" href="#line459">459</a><a class="anker" href="#line460">460</a><a class="anker" href="#line461">461</a><a class="anker" href="#line462">462</a><a class="anker" href="#line463">463</a><a class="anker" href="#line464">464</a><a class="anker" href="#line465">465</a><a class="anker" href="#line466">466</a><a class="anker" href="#line467">467</a><a class="anker" href="#line468">468</a><a class="anker" href="#line469">469</a><a class="anker" href="#line470">470</a><a class="anker" href="#line471">471</a><a class="anker" href="#line472">472</a><a class="anker" href="#line473">473</a><a class="anker" href="#line474">474</a><a class="anker" href="#line475">475</a><a class="anker" href="#line476">476</a><a class="anker" href="#line477">477</a><a class="anker" href="#line478">478</a><a class="anker" href="#line479">479</a><a class="anker" href="#line480">480</a><a class="anker" href="#line481">481</a><a class="anker" href="#line482">482</a><a class="anker" href="#line483">483</a><a class="anker" href="#line484">484</a><a class="anker" href="#line485">485</a><a class="anker" href="#line486">486</a><a class="anker" href="#line487">487</a><a class="anker" href="#line488">488</a><a class="anker" href="#line489">489</a><a class="anker" href="#line490">490</a><a class="anker" href="#line491">491</a></td><td class="line"><div id="line1"><pre><span class="token T_OPEN_TAG">&lt;?php</span></pre></div><div id="line2"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line3"><pre><span class="token T_DOC_COMMENT"> * Bluz Framework Component</span></pre></div><div id="line4"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line5"><pre><span class="token T_DOC_COMMENT"> * @copyright Bluz PHP Team</span></pre></div><div id="line6"><pre><span class="token T_DOC_COMMENT"> * @link https://github.com/bluzphp/framework</span></pre></div><div id="line7"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line8"><br/></div><div id="line9"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line10"><pre><span class="token T_DOC_COMMENT"> * @namespace</span></pre></div><div id="line11"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line12"><pre><span class="token T_NAMESPACE">namespace</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Bluz</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Http</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line13"><br/></div><div id="line14"><pre><span class="token T_USE">use</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Bluz</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">Request</span><span class="token T_NS_SEPARATOR">\</span><span class="token T_STRING">AbstractRequest</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line15"><br/></div><div id="line16"><pre><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line17"><pre><span class="token T_DOC_COMMENT"> * HTTP Request</span></pre></div><div id="line18"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line19"><pre><span class="token T_DOC_COMMENT"> * @package  Bluz\Http</span></pre></div><div id="line20"><pre><span class="token T_DOC_COMMENT"> *</span></pre></div><div id="line21"><pre><span class="token T_DOC_COMMENT"> * @author   Anton Shevchuk</span></pre></div><div id="line22"><pre><span class="token T_DOC_COMMENT"> * @created  06.07.11 16:59</span></pre></div><div id="line23"><pre><span class="token T_DOC_COMMENT"> */</span></pre></div><div id="line24"><pre><span class="token T_CLASS">class</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">Request</span><span class="token T_WHITESPACE"> </span><span class="token T_EXTENDS">extends</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">AbstractRequest</span></pre></div><div id="line25"><pre><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line26"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line27"><pre><span class="token T_DOC_COMMENT">     * @const string HTTP SCHEME constant names</span></pre></div><div id="line28"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line29"><pre><span class="token T_WHITESPACE">    </span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SCHEME_HTTP</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'http'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line30"><pre><span class="token T_WHITESPACE">    </span><span class="token T_CONST">const</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">SCHEME_HTTPS</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'https'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line31"><br/></div><div id="line32"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line33"><pre><span class="token T_DOC_COMMENT">     * File upload instance</span></pre></div><div id="line34"><pre><span class="token T_DOC_COMMENT">     * @var FileUpload</span></pre></div><div id="line35"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line36"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fileUpload</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line37"><br/></div><div id="line38"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line39"><pre><span class="token T_DOC_COMMENT">     * Constructor</span></pre></div><div id="line40"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line41"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">__construct</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line42"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line43"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">method</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'REQUEST_METHOD'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line44"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$request</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">file_get_contents</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'php://input'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line45"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$contentType</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getHeader</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'Content-Type'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line46"><br/></div><div id="line47"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// support header like "application/json" and "application/json; charset=utf-8"</span></pre></div><div id="line48"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$contentType</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">stristr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$contentType</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'application/json'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line49"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$data</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_ARRAY_CAST">(array)</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">json_decode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$request</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line50"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line51"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">method</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line52"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">METHOD_POST</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line53"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$data</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_POST</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line54"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line55"><pre><span class="token T_WHITESPACE">                </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line56"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_STRING">parse_str</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$request</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$data</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line57"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line58"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line59"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line60"><br/></div><div id="line61"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setParams</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$data</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line62"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line63"><br/></div><div id="line64"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line65"><pre><span class="token T_DOC_COMMENT">     * Access values contained in the superglobals as public members</span></pre></div><div id="line66"><pre><span class="token T_DOC_COMMENT">     * Order of precedence: 1. GET, 2. POST, 3. COOKIE, 4. SERVER, 5. ENV</span></pre></div><div id="line67"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line68"><pre><span class="token T_DOC_COMMENT">     * @link http://msdn.microsoft.com/en-us/library/system.web.httprequest.item.aspx</span></pre></div><div id="line69"><pre><span class="token T_DOC_COMMENT">     * @param string $key</span></pre></div><div id="line70"><pre><span class="token T_DOC_COMMENT">     * @param null $default</span></pre></div><div id="line71"><pre><span class="token T_DOC_COMMENT">     * @return mixed</span></pre></div><div id="line72"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line73"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getParam</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line74"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line75"><pre><span class="token T_WHITESPACE">        </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line76"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">params</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line77"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">parent</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">getParam</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line78"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_GET</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line79"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_GET</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line80"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_POST</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line81"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_POST</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line82"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_COOKIE</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line83"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_COOKIE</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line84"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_SERVER</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line85"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_SERVER</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line86"><pre><span class="token T_WHITESPACE">            </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_ENV</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line87"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_ENV</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line88"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DEFAULT">default</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line89"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line90"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line91"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line92"><br/></div><div id="line93"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line94"><pre><span class="token T_DOC_COMMENT">     * Get all request parameters</span></pre></div><div id="line95"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line96"><pre><span class="token T_DOC_COMMENT">     * @return array</span></pre></div><div id="line97"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line98"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getAllParams</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line99"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line100"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">array_merge</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_POST</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_GET</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">params</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line101"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line102"><br/></div><div id="line103"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line104"><pre><span class="token T_DOC_COMMENT">     * Get the request URI scheme</span></pre></div><div id="line105"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line106"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line107"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line108"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getScheme</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line109"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line110"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTPS'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'on'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">SCHEME_HTTPS</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">SCHEME_HTTP</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line111"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line112"><br/></div><div id="line113"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line114"><pre><span class="token T_DOC_COMMENT">     * Is the request a Javascript XMLHttpRequest?</span></pre></div><div id="line115"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line116"><pre><span class="token T_DOC_COMMENT">     * Should work with Prototype/Script.aculo.us, possibly others.</span></pre></div><div id="line117"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line118"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line119"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line120"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isXmlHttpRequest</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line121"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line122"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getHeader</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'X_REQUESTED_WITH'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'XMLHttpRequest'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line123"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line124"><br/></div><div id="line125"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line126"><pre><span class="token T_DOC_COMMENT">     * Is this a Flash request?</span></pre></div><div id="line127"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line128"><pre><span class="token T_DOC_COMMENT">     * @return bool</span></pre></div><div id="line129"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line130"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">isFlashRequest</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line131"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line132"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getHeader</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'USER_AGENT'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line133"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strstr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strtolower</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">' flash'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line134"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line135"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line136"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line137"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line138"><br/></div><div id="line139"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line140"><pre><span class="token T_DOC_COMMENT">     * Return the value of the given HTTP header. Pass the header name as the</span></pre></div><div id="line141"><pre><span class="token T_DOC_COMMENT">     * plain, HTTP-specified header name. Ex.: Ask for 'Accept' to get the</span></pre></div><div id="line142"><pre><span class="token T_DOC_COMMENT">     * Accept header, 'Accept-Encoding' to get the Accept-Encoding header.</span></pre></div><div id="line143"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line144"><pre><span class="token T_DOC_COMMENT">     * @param string $header HTTP header name</span></pre></div><div id="line145"><pre><span class="token T_DOC_COMMENT">     * @return string|false HTTP header value, or false if not found</span></pre></div><div id="line146"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line147"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getHeader</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line148"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line149"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Try to get it from the $_SERVER array first</span></pre></div><div id="line150"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$temp</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strtoupper</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">str_replace</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'-'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'_'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line151"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_SERVER</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$temp</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line152"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_SERVER</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$temp</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line153"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line154"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// This seems to be the only way to get the Authorization header on</span></pre></div><div id="line155"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Apache</span></pre></div><div id="line156"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">function_exists</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'apache_request_headers'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line157"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$headers</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">apache_request_headers</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line158"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$headers</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line159"><pre><span class="token T_WHITESPACE">                </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$headers</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line160"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line161"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$header</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strtolower</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line162"><pre><span class="token T_WHITESPACE">            </span><span class="token T_FOREACH">foreach</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$headers</span><span class="token T_WHITESPACE"> </span><span class="token T_AS">as</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$key</span><span class="token T_WHITESPACE"> </span><span class="token T_DOUBLE_ARROW">=&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line163"><pre><span class="token T_WHITESPACE">                </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strtolower</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line164"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$value</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line165"><pre><span class="token T_WHITESPACE">                </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line166"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line167"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line168"><br/></div><div id="line169"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line170"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line171"><br/></div><div id="line172"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line173"><pre><span class="token T_DOC_COMMENT">     * Retrieve a member of the $_GET super global</span></pre></div><div id="line174"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line175"><pre><span class="token T_DOC_COMMENT">     * If no $key is passed, returns the entire $_GET array.</span></pre></div><div id="line176"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line177"><pre><span class="token T_DOC_COMMENT">     * @param string $key</span></pre></div><div id="line178"><pre><span class="token T_DOC_COMMENT">     * @param string|array $default Default value to use if key not found</span></pre></div><div id="line179"><pre><span class="token T_DOC_COMMENT">     * @return string|array Returns null if key does not exist</span></pre></div><div id="line180"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line181"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getQuery</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line182"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line183"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line184"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_GET</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line185"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line186"><br/></div><div id="line187"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_GET</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_GET</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line188"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line189"><br/></div><div id="line190"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line191"><pre><span class="token T_DOC_COMMENT">     * Retrieve a member of the $_POST super global</span></pre></div><div id="line192"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line193"><pre><span class="token T_DOC_COMMENT">     * If no $key is passed, returns the entire $_POST array.</span></pre></div><div id="line194"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line195"><pre><span class="token T_DOC_COMMENT">     * @param string $key</span></pre></div><div id="line196"><pre><span class="token T_DOC_COMMENT">     * @param string|array $default Default value to use if key not found</span></pre></div><div id="line197"><pre><span class="token T_DOC_COMMENT">     * @return string|array Returns null if key does not exist</span></pre></div><div id="line198"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line199"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getPost</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line200"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line201"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line202"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_POST</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line203"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line204"><br/></div><div id="line205"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_POST</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_POST</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line206"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line207"><br/></div><div id="line208"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line209"><pre><span class="token T_DOC_COMMENT">     * Retrieve a member of the $_COOKIE super global</span></pre></div><div id="line210"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line211"><pre><span class="token T_DOC_COMMENT">     * If no $key is passed, returns the entire $_COOKIE array.</span></pre></div><div id="line212"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line213"><pre><span class="token T_DOC_COMMENT">     * @todo How to retrieve from nested arrays</span></pre></div><div id="line214"><pre><span class="token T_DOC_COMMENT">     * @param string $key</span></pre></div><div id="line215"><pre><span class="token T_DOC_COMMENT">     * @param string $default Default value to use if key not found</span></pre></div><div id="line216"><pre><span class="token T_DOC_COMMENT">     * @return string|array Returns null if key does not exist</span></pre></div><div id="line217"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line218"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getCookie</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$key</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line219"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line220"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line221"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_COOKIE</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line222"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line223"><br/></div><div id="line224"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_ISSET">isset</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$_COOKIE</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$_COOKIE</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$key</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$default</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line225"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line226"><br/></div><div id="line227"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line228"><pre><span class="token T_DOC_COMMENT">     * setFileUpload</span></pre></div><div id="line229"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line230"><pre><span class="token T_DOC_COMMENT">     * @param FileUpload $fileUpload</span></pre></div><div id="line231"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line232"><pre><span class="token T_DOC_COMMENT">     * @return void</span></pre></div><div id="line233"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line234"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">setFileUpload</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">FileUpload</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fileUpload</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line235"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line236"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">fileUpload</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$fileUpload</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line237"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line238"><br/></div><div id="line239"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line240"><pre><span class="token T_DOC_COMMENT">     * getFileUpload</span></pre></div><div id="line241"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line242"><pre><span class="token T_DOC_COMMENT">     * @return FileUpload</span></pre></div><div id="line243"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line244"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getFileUpload</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line245"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line246"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">fileUpload</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line247"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">fileUpload</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_NEW">new</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">FileUpload</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line248"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line249"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">fileUpload</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line250"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line251"><br/></div><div id="line252"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line253"><pre><span class="token T_DOC_COMMENT">     * Get the HTTP host.</span></pre></div><div id="line254"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line255"><pre><span class="token T_DOC_COMMENT">     * "Host" ":" host [ ":" port ] ; Section 3.2.2</span></pre></div><div id="line256"><pre><span class="token T_DOC_COMMENT">     * Note the HTTP Host header is not the same as the URI host.</span></pre></div><div id="line257"><pre><span class="token T_DOC_COMMENT">     * It includes the port while the URI host doesn't.</span></pre></div><div id="line258"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line259"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line260"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line261"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getHttpHost</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line262"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line263"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$host</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_HOST'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line264"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$host</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line265"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$host</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line266"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line267"><br/></div><div id="line268"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$scheme</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getScheme</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line269"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$name</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SERVER_NAME'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line270"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$port</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SERVER_PORT'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line271"><br/></div><div id="line272"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line273"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line274"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$scheme</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">SCHEME_HTTP</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$port</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">80</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line275"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$scheme</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">SCHEME_HTTPS</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$port</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">443</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line276"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line277"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line278"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line279"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$name</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">':'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$port</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line280"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line281"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line282"><br/></div><div id="line283"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line284"><pre><span class="token T_DOC_COMMENT">     * Get the request URI.</span></pre></div><div id="line285"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line286"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line287"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line288"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getRequestUri</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line289"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line290"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line291"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">detectRequestUri</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line292"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line293"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">requestUri</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line294"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line295"><br/></div><div id="line296"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line297"><pre><span class="token T_DOC_COMMENT">     * Get the base URL.</span></pre></div><div id="line298"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line299"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line300"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line301"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getBaseUrl</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line302"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line303"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line304"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">setBaseUrl</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">detectBaseUrl</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line305"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line306"><br/></div><div id="line307"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">baseUrl</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line308"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line309"><br/></div><div id="line310"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line311"><pre><span class="token T_DOC_COMMENT">     * Get the client's IP address</span></pre></div><div id="line312"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line313"><pre><span class="token T_DOC_COMMENT">     * @param  bool $checkProxy</span></pre></div><div id="line314"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line315"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line316"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getClientIp</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$checkProxy</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line317"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line318"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$checkProxy</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_CLIENT_IP'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line319"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$ip</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_CLIENT_IP'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line320"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line321"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$checkProxy</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_X_FORWARDED_FOR'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_EQUAL">!=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line322"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$ip</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_X_FORWARDED_FOR'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line323"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line324"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$ip</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'REMOTE_ADDR'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line325"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line326"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line327"><br/></div><div id="line328"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$ip</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line329"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line330"><br/></div><div id="line331"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line332"><pre><span class="token T_DOC_COMMENT">     * Detect the base URI for the request</span></pre></div><div id="line333"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line334"><pre><span class="token T_DOC_COMMENT">     * Looks at a variety of criteria in order to attempt to autodetect a base</span></pre></div><div id="line335"><pre><span class="token T_DOC_COMMENT">     * URI, including rewrite URIs, proxy URIs, etc.</span></pre></div><div id="line336"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line337"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line338"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line339"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">detectRequestUri</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line340"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line341"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line342"><br/></div><div id="line343"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Check this first so IIS will catch.</span></pre></div><div id="line344"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$httpXRewriteUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_X_REWRITE_URL'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line345"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$httpXRewriteUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line346"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$httpXRewriteUrl</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line347"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line348"><br/></div><div id="line349"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// IIS7 with URL Rewrite: make sure we get the unencoded url</span></pre></div><div id="line350"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// (double slash problem).</span></pre></div><div id="line351"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$iisUrlRewritten</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'IIS_WasUrlRewritten'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line352"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$unencodedUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'UNENCODED_URL'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line353"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'1'</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_EQUAL">==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$iisUrlRewritten</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$unencodedUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line354"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$unencodedUrl</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line355"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line356"><br/></div><div id="line357"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// HTTP proxy requests setup request URI with scheme and host</span></pre></div><div id="line358"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// [and port] + the URL path, only use URL path.</span></pre></div><div id="line359"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$httpXRewriteUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line360"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'REQUEST_URI'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line361"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line362"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line363"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$schemeAndHttpHost</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getScheme</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'://'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'HTTP_HOST'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line364"><br/></div><div id="line365"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$schemeAndHttpHost</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line366"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">substr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$schemeAndHttpHost</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line367"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line368"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line369"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line370"><br/></div><div id="line371"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// IIS 5.0, PHP as CGI.</span></pre></div><div id="line372"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$origPathInfo</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'ORIG_PATH_INFO'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line373"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$origPathInfo</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line374"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$queryString</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'QUERY_STRING'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line375"><pre><span class="token T_WHITESPACE">            </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$queryString</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line376"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$origPathInfo</span><span class="token T_WHITESPACE"> </span><span class="token T_CONCAT_EQUAL">.=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'?'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$queryString</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line377"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line378"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$origPathInfo</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line379"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line380"><br/></div><div id="line381"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'/'</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line382"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line383"><br/></div><div id="line384"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line385"><pre><span class="token T_DOC_COMMENT">     * Auto-detect the base path from the request environment</span></pre></div><div id="line386"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line387"><pre><span class="token T_DOC_COMMENT">     * Uses a variety of criteria in order to detect the base URL of the request</span></pre></div><div id="line388"><pre><span class="token T_DOC_COMMENT">     * (i.e., anything additional to the document root).</span></pre></div><div id="line389"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line390"><pre><span class="token T_DOC_COMMENT">     * The base URL includes the schema, host, and port, in addition to the path.</span></pre></div><div id="line391"><pre><span class="token T_DOC_COMMENT">     *</span></pre></div><div id="line392"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line393"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line394"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PROTECTED">protected</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">detectBaseUrl</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line395"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line396"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$filename</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SCRIPT_FILENAME'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line397"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$scriptName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'SCRIPT_NAME'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line398"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$phpSelf</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'PHP_SELF'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line399"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$origScriptName</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getServer</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'ORIG_SCRIPT_NAME'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line400"><br/></div><div id="line401"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$scriptName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">basename</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$scriptName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$filename</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line402"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$scriptName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line403"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$phpSelf</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">basename</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$phpSelf</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$filename</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line404"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpSelf</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line405"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSEIF">elseif</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$origScriptName</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">null</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">basename</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$origScriptName</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$filename</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line406"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// 1and1 shared hosting compatibility.</span></pre></div><div id="line407"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$origScriptName</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line408"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_ELSE">else</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line409"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// Backtrack up the SCRIPT_FILENAME to find the portion</span></pre></div><div id="line410"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// matching PHP_SELF.</span></pre></div><div id="line411"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$path</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$phpSelf</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_QUESTION_MARK">?</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_COLON">:</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line412"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$segments</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">array_reverse</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">explode</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'/'</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">trim</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$filename</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'/'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line413"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$index</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line414"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$last</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">count</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$segments</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line415"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line416"><br/></div><div id="line417"><pre><span class="token T_WHITESPACE">            </span><span class="token T_DO">do</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line418"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$segment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$segments</span><span class="token T_PHPDOX_OPEN_SQUARE">[</span><span class="token T_VARIABLE">$index</span><span class="token T_PHPDOX_CLOSE_SQUARE">]</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line419"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'/'</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$segment</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_DOT">.</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line420"><pre><span class="token T_WHITESPACE">                </span><span class="token T_VARIABLE">$index</span><span class="token T_INC">++</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line421"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span><span class="token T_WHITESPACE"> </span><span class="token T_WHILE">while</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$last</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_GT">&gt;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$index</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$pos</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$path</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$pos</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line422"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line423"><br/></div><div id="line424"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Does the base URL have anything in common with the request URI?</span></pre></div><div id="line425"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$requestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getRequestUri</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line426"><br/></div><div id="line427"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Full base URL matches.</span></pre></div><div id="line428"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line429"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line430"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line431"><br/></div><div id="line432"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// Directory portion of base path matches.</span></pre></div><div id="line433"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_LNUMBER">0</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">dirname</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line434"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">dirname</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line435"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line436"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line437"><br/></div><div id="line438"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$truncatedRequestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line439"><br/></div><div id="line440"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$pos</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">'?'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line441"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$truncatedRequestUri</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">substr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$pos</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line442"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line443"><br/></div><div id="line444"><pre><span class="token T_WHITESPACE">        </span><span class="token T_VARIABLE">$basename</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">basename</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line445"><br/></div><div id="line446"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// No match whatsoever</span></pre></div><div id="line447"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_EMPTY">empty</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$basename</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_OR">||</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_IDENTICAL">===</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$truncatedRequestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$basename</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line448"><pre><span class="token T_WHITESPACE">            </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">''</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line449"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line450"><br/></div><div id="line451"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// If using mod_rewrite or ISAPI_Rewrite strip the script filename</span></pre></div><div id="line452"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// out of the base path. $pos !== 0 makes sure it is not matching a</span></pre></div><div id="line453"><pre><span class="token T_WHITESPACE">        </span><span class="token T_COMMENT">// value from PATH_INFO or QUERY_STRING.</span></pre></div><div id="line454"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_GREATER_OR_EQUAL">&gt;=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line455"><pre><span class="token T_WHITESPACE">            </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">false</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$pos</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_BOOLEAN_AND">&amp;&amp;</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$pos</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line456"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line457"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">substr</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$requestUri</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_LNUMBER">0</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$pos</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_PLUS">+</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">strlen</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line458"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line459"><br/></div><div id="line460"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$baseUrl</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line461"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line462"><br/></div><div id="line463"><pre><span class="token T_WHITESPACE">    </span><span class="token T_DOC_COMMENT">/**</span></pre></div><div id="line464"><pre><span class="token T_DOC_COMMENT">     * Get Accept MIME Type</span></pre></div><div id="line465"><pre><span class="token T_DOC_COMMENT">     * @return string</span></pre></div><div id="line466"><pre><span class="token T_DOC_COMMENT">     */</span></pre></div><div id="line467"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PUBLIC">public</span><span class="token T_WHITESPACE"> </span><span class="token T_FUNCTION">function</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">getAccept</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span></pre></div><div id="line468"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line469"><pre><span class="token T_WHITESPACE">        </span><span class="token T_IF">if</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_PHPDOX_EXCLAMATION_MARK">!</span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">accept</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line470"><pre><span class="token T_WHITESPACE">            </span><span class="token T_VARIABLE">$header</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">getHeader</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_CONSTANT_ENCAPSED_STRING">'accept'</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line471"><br/></div><div id="line472"><pre><span class="token T_WHITESPACE">            </span><span class="token T_COMMENT">// switch statement for $header</span></pre></div><div id="line473"><pre><span class="token T_WHITESPACE">            </span><span class="token T_SWITCH">switch</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">true</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_CURLY">{</span></pre></div><div id="line474"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"text/html"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line475"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">accept</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">ACCEPT_HTML</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line476"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line477"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"application/json"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line478"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">accept</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">ACCEPT_JSON</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line479"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line480"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"application/javascript"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line481"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">accept</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">ACCEPT_JSONP</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line482"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line483"><pre><span class="token T_WHITESPACE">                </span><span class="token T_CASE">case</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_STRING">strpos</span><span class="token T_PHPDOX_OPEN_BRACKET">(</span><span class="token T_VARIABLE">$header</span><span class="token T_PHPDOX_COMMA">,</span><span class="token T_WHITESPACE"> </span><span class="token T_CONSTANT_ENCAPSED_STRING">"application/xml"</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_WHITESPACE"> </span><span class="token T_IS_NOT_IDENTICAL">!==</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">false</span><span class="token T_PHPDOX_CLOSE_BRACKET">)</span><span class="token T_PHPDOX_COLON">:</span></pre></div><div id="line484"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">accept</span><span class="token T_WHITESPACE"> </span><span class="token T_PHPDOX_EQUAL">=</span><span class="token T_WHITESPACE"> </span><span class="token T_STRING">self</span><span class="token T_DOUBLE_COLON">::</span><span class="token T_STRING">ACCEPT_XML</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line485"><pre><span class="token T_WHITESPACE">                    </span><span class="token T_BREAK">break</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line486"><pre><span class="token T_WHITESPACE">            </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line487"><pre><span class="token T_WHITESPACE">        </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line488"><pre><span class="token T_WHITESPACE">        </span><span class="token T_RETURN">return</span><span class="token T_WHITESPACE"> </span><span class="token T_VARIABLE">$this</span><span class="token T_OBJECT_OPERATOR">-&gt;</span><span class="token T_STRING">accept</span><span class="token T_PHPDOX_SEMICOLON">;</span></pre></div><div id="line489"><pre><span class="token T_WHITESPACE">    </span><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line490"><pre><span class="token T_PHPDOX_CLOSE_CURLY">}</span></pre></div><div id="line491"><br/></div></td></tr></table></section></div><footer><span>Generated using phpDox 0.8.1.1 - Copyright (C) 2010 - 2015 by Arne Blankerts</span></footer></body></html>
